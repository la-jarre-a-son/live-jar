import React from 'react';
import { Meta, Story } from '@storybook/react';

import moduleCss from '!!raw-loader!./Avatar.module.scss?raw';
import { extractThemeVariables } from '../../../.storybook/utils/Theming';

import themeVariablesScss from '!!raw-loader!../../theme/sketchfab/variables/Avatar.scss?raw';

import { Avatar, AvatarSizes, AvatarShapes } from '.';

export default {
  title: 'Components/Data display/Avatar',
  component: Avatar,
  parameters: {
    theming: extractThemeVariables([moduleCss, themeVariablesScss], 'Avatar'),
  },
} as Meta;

type StoryProps = React.ComponentProps<typeof Avatar>;

const Template: Story<StoryProps> = ({ children, ...rest }) => (
  <Avatar {...rest}>{children}</Avatar>
);

export const Default = Template.bind({});
Default.args = {
  alt: 'Alt name',
  shape: 'round',
  size: 'md',
  image: 'https://www.placecage.com/128/128/',
  children: '',
};

export const WithLabel = Template.bind({});
WithLabel.args = {
  alt: 'Alex Spontak',
  shape: 'round',
  size: 'md',
  children: 'AS',
};

/**
 * @storyDesc The avatar come in two shapes and different sizes.
 */
export const All = () => (
  <div
    style={{
      display: 'grid',
      gridTemplateColumns: `repeat(${AvatarSizes.length}, 1fr)`,
      alignItems: 'center',
      gridGap: '8px',
    }}
  >
    {AvatarShapes.map((shape) =>
      AvatarSizes.map((size) => (
        <div key={`${size}--${shape}`}>
          <Default
            alt="Alt name"
            size={size}
            shape={shape}
            image={Default.args?.image || ''}
          />
        </div>
      )),
    )}
  </div>
);

/**
 * @storyDesc You can use the `as` prop to override the root element to use.
 */
export const AsProps = () => {
  return (
    <>
      <Avatar
        alt="image"
        as="span"
        image={Default.args?.image || ''}
        outlined
      />
      <Avatar
        alt="image"
        as="a"
        href="https://reactjs.org/"
        target="_blank"
        image={Default.args?.image || ''}
        outlined
      />
      <Avatar
        alt="image"
        as="button"
        onClick={() => alert('clicked')}
        image={Default.args?.image || ''}
        outlined
      />
    </>
  );
};
